---
import Layout from "../layouts/Layout.astro";
import Presentation from "../sections/Presentation.astro";
import Address from "../sections/Address.astro";
import AboutMe from "../sections/AboutMe.astro";
import Contact from "../sections/Contact.astro";
import Specifics from "../sections/Specifics.astro";
import Welcome from "../sections/Welcome.astro";
import Cut from "../sections/Cut.astro";
import Cut2 from "../sections/Cut2.astro";
import Cut3 from "../sections/Cut3.astro";
import Cut4 from "../sections/Cut4.astro";
import Form from "../sections/Form.astro";
import FAQ from "../sections/FAQ.astro";

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.
---

<Layout title="Start - Esther Trenner Podologie">
  <Presentation />
  <Welcome />
  <Specifics />
  <Cut />
  <Address />
  <Cut2 />
  <AboutMe />

  <Cut3 />
  <Form />
  <Contact />
  <Cut4 />
  <FAQ />
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const target = entry.target;

              // Verificar el tama침o de pantalla (md = 768px)
              const isSmallScreen = window.innerWidth < 768;

              // Para p5-p10, no aplicar animaciones en pantallas peque침as
              const isP5ToP10 = ["p5", "p6", "p7", "p8", "p9", "p10"].includes(
                target.id
              );

              if (isP5ToP10 && isSmallScreen) {
                // No aplicar animaci칩n en pantallas peque침as para p5-p10
                observer.unobserve(target);
                return;
              }

              if (
                target.id === "p1" ||
                target.id === "p3" ||
                target.id === "p5" ||
                target.id === "p8" ||
                target.id === "p9"
              ) {
                target.classList.add("animate-left");
              } else if (
                target.id === "p2" ||
                target.id === "p4" ||
                target.id === "p6" ||
                target.id === "p7" ||
                target.id === "p10"
              ) {
                target.classList.add("animate-right");
              }
              observer.unobserve(target); // para que solo se animen una vez
            }
          });
        },
        {
          threshold: 0.1,
        }
      );

      const p1 = document.getElementById("p1");
      const p2 = document.getElementById("p2");
      const p3 = document.getElementById("p3");
      const p4 = document.getElementById("p4");
      const p5 = document.getElementById("p5");
      const p6 = document.getElementById("p6");
      const p7 = document.getElementById("p7");
      const p8 = document.getElementById("p8");
      const p9 = document.getElementById("p9");
      const p10 = document.getElementById("p10");

      if (p1) observer.observe(p1);
      if (p2) observer.observe(p2);
      if (p3) observer.observe(p3);
      if (p4) observer.observe(p4);
      if (p5) observer.observe(p5);
      if (p6) observer.observe(p6);
      if (p7) observer.observe(p7);
      if (p8) observer.observe(p8);
      if (p9) observer.observe(p9);
      if (p10) observer.observe(p10);
    });
  </script>
</Layout>
